ATOM.LTRL = : [
    @ATOM.LTRL.INTEGER
    @ATOM.LTRL.STRING
] ;

# Number
## Integer
ATOM.LTRL.INTEGER = : [
    @ATOM.LTRL.INTEGER.B02
    @ATOM.LTRL.INTEGER.B16
    @ATOM.LTRL.INTEGER.B10
] ;
ATOM.LTRL.INTEGER.B10 = base:<"10"> val:0/\d[\d_]*/ ;
ATOM.LTRL.INTEGER.B02 = base:<"2">  "0b" ! val:0/[01][01_]*/ ;
ATOM.LTRL.INTEGER.B16 = base:<"16"> "0x" ! val:0/[\da-f][\da-f_]*/i ;

# String
ATOM.LTRL.STRING.PARTS = : [
    ( "'''" ! :0/(?:[^'\\]|(?:\\.)|(?:''?[^']))+/ "'''" )
    ( '"""' ! :0/(?:[^"\\]|(?:\\.)|(?:""?[^"]))+/ '"""' )
    ( "'" ! :0/(?:[^\\'\n]|(?:\\.))/ "'" )
    ( '"' ! :0/(?:[^\\"\n]|(?:\\.))/ '"' )
] ;
ATOM.LTRL.STRING = type:<"string"> - [
    @ATOM.LTRL.STRING_STR
    @ATOM.LTRL.STRING_RAW
] ;
ATOM.LTRL.STRING_STR = raw:<> val:@ATOM.LTRL.STRING.PARTS ;
ATOM.LTRL.STRING_RAW= raw:<1> val:{ "r" :@ATOM.LTRL.STRING.PARTS } ;
