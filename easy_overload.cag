# Easy overloads for individual characters or sequences #

# Comments
eo.comment_singleline.start = "//" ;
eo.comment_multiline = :1/\/\*(.*?)\*\//s ;

# Procedures
eo.proc.stmtkw       = "proc "
eo.proc.exprkw       = "proc"
eo.proc.arg.left     = "(" ;
eo.proc.arg.right    = ")" ;
eo.proc.arg.sep      = "," ;
eo.proc.arg.typesep  = ":" ;
eo.proc.arg.default  = "=" ;
eo.proc.arg.unpack   = "*" ;
eo.proc.arg.kwunpack = "**" ;

# Operators
## Unary
eo.op.uplus  = "+" ;
eo.op.uminus = "-" ;
eo.op.bitnot = "~" ;
eo.op.lognot = "!" ;
## Binary
### Assignment
eo.op.assign     = "="  ;
eo.op.assignexpr = ":=" ;
### Arithmetic
eo.op.add  = "+"  ;
eo.op.sub  = "-"  ;
eo.op.mult = "*"  ;
eo.op.div  = "/"  ;
eo.op.mod  = "%"  ;
eo.op.exp  = "**" ;
### Comparison
eo.op.eq =      "==" ;
eo.op.ne =      "!=" ;
eo.op.gt =      ">"  ;
eo.op.lt =      "<"  ;
eo.op.ge =      ">=" ;
eo.op.le =      "<=" ;
eo.op.nullish = "??" ;
### Logical
eo.op.logor  = "||" ;
eo.op.logand = "&&" ;
eo.op.logxor = "^^" ;
### Bitwise
eo.op.bitor  = "|"  ;
eo.op.bitand = "&"  ;
eo.op.bitxor = "^"  ;
eo.op.lshift = "<<" ;
eo.op.rshift = ">>" ;
## Ternary
eo.op.ternary_cmp = "?" ;
eo.op.ternary_sep = ":" ;
